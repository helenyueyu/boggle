{"version":3,"sources":["components/Model.js","components/Title.js","components/Tile.js","App.js","serviceWorker.js","index.js"],"names":["makeBoard","letters","vowels","consonants","filter","x","includes","create","letter","quantity","Array","fill","createLetters","E","T","A","R","I","N","O","S","D","C","H","L","F","M","P","U","G","Y","W","B","J","K","Q","V","X","Z","concat","Object","toConsumableArray","chooseTile","letterDistribution","randomIndex","Math","floor","random","length","randomletter","splice","checkBoggleBoard","matrix","checkArray","i","j","push","createBoggleBoard","boggleboard","row","titleStyle","fontSize","display","justifyContent","alignItems","fontFamily","Title","react_default","a","createElement","style","tileStyle","border","width","height","tileSelectedStyle","backgroundColor","Tile","state","selected","_this","props","handleClick","setState","key","this","idx","onClick","tile","Component","App","distance","row1","row2","col1","col2","abs","parseInt","undefined","board","word","rows","cols","valid","boggle","boggleBoard","col","_this2","console","log","Fragment","className","components_Title","map","components_Tile","e","assign","target","innerHTML","slice","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e13e6bb0.chunk.js","sourcesContent":["const makeBoard = () => {\n  const letterDistribution = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n  const vowels = ['A', 'E', 'I', 'O', 'U']\n  const consonants = letterDistribution.filter(x => !vowels.includes(x))\n\n  const create = (letter, quantity) => {\n    return Array(quantity).fill(letter)\n  }\n\n  let letters\n  const createLetters = () => {\n    const E = create('E', 19)\n    const T = create('T', 13)\n    const A = create('A', 12)\n    const R = create('R', 12)\n    const I = create('I', 11)\n    const N = create('N', 11)\n    const O = create('O', 11)\n    const S = create('S', 9)\n    const D = create('D', 6)\n    const C = create('C', 5)\n    const H = create('H', 5)\n    const L = create('L', 5)\n    const F = create('F', 4)\n    const M = create('M', 4)\n    const P = create('P', 4)\n    const U = create('U', 4)\n    const G = create('G', 3)\n    const Y = create('Y', 3)\n    const W = create('W', 2)\n    const B = create('B', 1)\n    const J = create('J', 1)\n    const K = create('K', 1)\n    const Q = create('Q', 1)\n    const V = create('V', 1)\n    const X = create('X', 1)\n    const Z = create('Z', 1)\n    letters = [...A, ...B, ...C, ...D, ...E, ...F, ...G, ...H, ...I, ...J, ...K, ...L, ...M, ...N, ...O, ...P, ...Q, ...R, ...S, ...T, ...U, ...V, ...W, ...X, ...Y, ...Z]\n    return letters\n  }\n\n  createLetters()\n\n  const chooseTile = (letterDistribution) => {\n    let randomIndex = Math.floor(Math.random()*letterDistribution.length)\n    let randomletter = letterDistribution[randomIndex]\n    // Once the letter is taken from the distribution, remove the tile \n    letterDistribution = letterDistribution.splice(randomIndex, 1)\n    return randomletter\n  }\n\n  // Need at least 4 vowels and 4 consonants\n  const checkBoggleBoard = (matrix) => {\n    let checkArray = []\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix[i].length; j++) {\n        checkArray.push(matrix[i][j])\n      }\n    }\n    let vowelCount = checkArray.filter(x => vowels.includes(x)).length\n    let consonantCount = checkArray.filter(x => consonants.includes(x)).length\n    return [vowelCount, consonantCount]\n  }\n\n  const createBoggleBoard = () => {\n    let boggleboard = []\n    for (let i = 0; i < 4; i++) {\n      let row = []\n      for (let j = 0; j < 4; j++) {\n        row.push(chooseTile(letters))\n      }\n      boggleboard.push(row)\n    }\n    if (checkBoggleBoard(boggleboard)[0] < 4 || checkBoggleBoard(boggleboard)[1] < 4) {\n      createLetters()\n      createBoggleBoard()\n      return boggleboard\n    }\n    return boggleboard\n  }\n\n  const newBoggleBoard = createBoggleBoard()\n  return newBoggleBoard\n}\n\nexport default makeBoard\n","import React from 'react'\n\nconst titleStyle = {\n  fontSize: '72px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  fontFamily: \"'Russo One', sans-serif\"\n}\n\nconst Title = () => <div style={titleStyle}>Boggle</div>\n\nexport default Title\n","import React, { Component } from 'react'\n\nconst tileStyle = {\n  border: '2px solid black',\n  fontSize: '60px',\n  width: '5rem',\n  height: '5rem',\n  fontFamily: \"'Russo One', sans-serif\"\n}\n\nconst tileSelectedStyle = {\n  border: '2px solid black',\n  fontSize: '60px',\n  width: '5rem',\n  height: '5rem',\n  fontFamily: \"'Russo One', sans-serif\",\n  backgroundColor: 'lime'\n}\n\nclass Tile extends Component {\n  state = {\n    selected: this.props.selected\n  }\n  handleClick = () => {\n    this.setState({\n      selected: !this.state.selected\n    })\n  }\n  render() {\n    return (\n      <div key={this.props.idx}\n        style={(this.props.selected) ? tileSelectedStyle : tileStyle}\n        onClick={this.props.onClick}>\n      {this.props.tile}\n      </div>\n    )\n  }\n}\n\n\nexport default Tile\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport makeBoard from './components/Model'\n\nimport Title from './components/Title'\nimport Tile from './components/Tile'\n\nclass App extends Component {\n  // row1 and row2 are strings\n  distance = (row1, row2, col1, col2) => {\n    if (Math.abs(parseInt(row1, 10) - parseInt(row2, 10)) <= 1\n    && Math.abs(parseInt(col1, 10) - parseInt(col2, 10)) <= 1) {\n      return true\n    } else if (row1 === undefined || row2 === undefined || col1 === undefined || col2 === undefined) {\n      return true\n    } else {\n      return false\n    }\n  }\n  componentDidMount() {\n    let boggle = []\n    let boggleBoard = makeBoard()\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        boggle.push({\n          row: i+1,\n          col: j+1,\n          tile: boggleBoard[i][j],\n          selected: false\n        })\n      }\n    }\n    this.setState({\n      board: boggle\n    })\n  }\n\n  state = {\n    board: [],\n    word: '',\n    rows: [],\n    cols: [],\n    valid: true\n  }\n\n  render() {\n    console.log(this.state.board)\n    // console.log(this.state.word)\n    console.log(this.state.rows)\n    console.log(this.state.cols)\n    console.log(this.state.valid)\n    console.log(this.distance(\n      this.state.rows[this.state.rows.length-1],\n      this.state.rows[this.state.rows.length-2],\n      this.state.cols[this.state.cols.length-1],\n      this.state.cols[this.state.cols.length-2]\n    ))\n    // console.log(this.state.board.filter(x => x.selected === true).map(x => x.tile))\n    const { board } = this.state\n    return (\n      <React.Fragment>\n      <div className=\"App\">\n        <Title/>\n        <br/>\n        <div className=\"board\">\n          <div className=\"row\">\n            {this.state.board.filter((x,idx)=> idx >= 0 && idx <=3).map((x, idx) =>\n\n            <Tile key={idx}\n            tile={x.tile}\n            row={x.row}\n            col={x.col}\n            selected={x.selected}\n            onClick={(e) => this.setState({\n              board: Object.assign(\n                [],\n                this.state.board, this.state.board[idx].selected = !this.state.board[idx].selected),\n\n              word: (this.state.board[idx].selected === true) ? this.state.word + e.target.innerHTML : this.state.word.slice(0, this.state.word.length - 1),\n              rows: (this.state.board[idx].selected === true) ? this.state.rows +  this.state.board[idx].row : this.state.rows.slice(0, this.state.rows.length - 1),\n\n              cols: (this.state.board[idx].selected === true) ? this.state.cols +  this.state.board[idx].col : this.state.rows.slice(0, this.state.rows.length - 1),\n\n              valid: (this.state.valid === false) ? false :\n              (this.state.rows.length <= 1) ? true : (this.distance(\n                this.state.rows[this.state.rows.length-1],\n                this.state.rows[this.state.rows.length-2],\n                this.state.cols[this.state.cols.length-1],\n                this.state.cols[this.state.cols.length-2]\n              ) === true) ? true : false\n            })}\n            />)}\n          </div>\n          <div className=\"row\">\n            {this.state.board.filter((x,idx)=> idx >= 4 && idx <=7).map((x, idx) => <Tile key={idx}\n            tile={x.tile}\n            row={x.row}\n            col={x.col}\n            selected={x.selected}\n            onClick={(e) => this.setState({\n              board: Object.assign(\n                [],\n                this.state.board, this.state.board[idx+4].selected = !this.state.board[idx+4].selected),\n\n              word: (this.state.board[idx+4].selected === true) ? this.state.word + e.target.innerHTML : this.state.word.slice(0, this.state.word.length - 1),\n              rows: (this.state.board[idx+4].selected === true) ? this.state.rows +  this.state.board[idx+4].row : this.state.rows.slice(0, this.state.rows.length - 1),\n\n              cols: (this.state.board[idx+4].selected === true) ? this.state.cols +  this.state.board[idx+4].col : this.state.rows.slice(0, this.state.rows.length - 1),\n\n              valid: (this.state.valid === false) ? false :\n              (this.state.rows.length <= 1) ? true : (this.distance(\n                this.state.rows[this.state.rows.length-1],\n                this.state.rows[this.state.rows.length-2],\n                this.state.cols[this.state.cols.length-1],\n                this.state.cols[this.state.cols.length-2]\n              ) === true) ? true : false\n            })}\n            />)}\n          </div>\n          <div className=\"row\">\n            {this.state.board.filter((x,idx)=> idx >= 8 && idx <=11).map((x, idx) => <Tile key={idx}\n            tile={x.tile}\n            row={x.row}\n            col={x.col}\n            selected={x.selected}\n            onClick={(e) => this.setState({\n              board: Object.assign(\n                [],\n                this.state.board, this.state.board[idx+8].selected = !this.state.board[idx+8].selected),\n              word: (this.state.board[idx+8].selected === true) ? this.state.word + e.target.innerHTML : this.state.word.slice(0, this.state.word.length - 1),\n              rows: (this.state.board[idx+8].selected === true) ? this.state.rows +  this.state.board[idx+8].row : this.state.rows.slice(0, this.state.rows.length - 1),\n\n              cols: (this.state.board[idx+8].selected === true) ? this.state.cols +  this.state.board[idx+8].col : this.state.rows.slice(0, this.state.rows.length - 1),\n\n              valid: (this.state.valid === false) ? false :\n              (this.state.rows.length <= 1) ? true : (this.distance(\n                this.state.rows[this.state.rows.length-1],\n                this.state.rows[this.state.rows.length-2],\n                this.state.cols[this.state.cols.length-1],\n                this.state.cols[this.state.cols.length-2]\n              ) === true) ? true : false\n            })}\n            />)}\n          </div>\n          <div className=\"row\">\n            {this.state.board.filter((x,idx)=> idx >= 12 && idx <=15).map((x, idx) => <Tile key={idx}\n            tile={x.tile}\n            row={x.row}\n            col={x.col}\n            selected={x.selected}\n            onClick={(e) => this.setState({\n              board: Object.assign(\n                [],\n                this.state.board, this.state.board[idx+12].selected = !this.state.board[idx+12].selected),\n\n              word: (this.state.board[idx+12].selected === true) ? this.state.word + e.target.innerHTML : this.state.word.slice(0, this.state.word.length - 1),\n\n              rows: (this.state.board[idx+12].selected === true) ? this.state.rows +  this.state.board[idx+12].row : this.state.rows.slice(0, this.state.rows.length - 1),\n\n              cols: (this.state.board[idx+12].selected === true) ? this.state.cols +  this.state.board[idx+12].col : this.state.rows.slice(0, this.state.rows.length - 1),\n\n              valid: (this.state.valid === false) ? false :\n              (this.state.rows.length <= 1) ? true : (this.distance(\n                this.state.rows[this.state.rows.length-1],\n                this.state.rows[this.state.rows.length-2],\n                this.state.cols[this.state.cols.length-1],\n                this.state.cols[this.state.cols.length-2]\n              ) === true) ? true : false\n            })}\n            />)}\n          </div>\n        </div>\n      </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}